nameOverride: "search"
fullnameOverride: "search"

replicaCount: 1


image:
  repository: sunbirded.azurecr.io/search-service
  tag: "release-6.1.0_RC4_2272e93_40"
  pullPolicy: IfNotPresent
  pullSecrets: []

podAnnotations: {}

podSecurityContext: {}
  # runAsNonRoot: true
  # runAsUser: 1001
  # fsGroup: 1001

securityContext: {}
  # readOnlyRootFilesystem: false
  # capabilities:
  #   drop:
  #   - ALL

service:
  type: ClusterIP
  protocol: TCP
  ports:
    - name: http-search
      port: 9000
      targetPort: 9000

commonAnnotations:
  reloader.stakater.com/auto: "true"

strategy:
  type: RollingUpdate
  maxsurge: 25%
  maxunavailable: 25%

ingress: {}

resources:
  requests:
    cpu: 100m
    memory: 100Mi
  limits:
    cpu: 1
    memory: 1024Mi

javaenv: 
  javaoptions: -Xms500m -Xmx500m
  _javaoptions: -Dlog4j2.formatMsgNoLookups=true
  
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
  httpGet:
    path: /health
    port: 9000
readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
  httpGet:
    path: /health
    port: 9000

nodeSelector: {}
tolerations: []
affinity: {}

configmap:
  enabled: true
  mountPath: /home/sunbird/search-service-1.0-SNAPSHOT/config

serviceAccount:
  create: true

serviceMonitor:
  enabled: false
  interval: 30s
  scrapeTimeout: 10s
  labels: {} # additional labels e.g. release: prometheus
  honorLabels: true
  jobLabel: "app.kubernetes.io/name"
  
cloud_storage: 
  type: "azure"
search:
  telemetry_env: sunbird
  fields_query: '["name^100","title^100","lemma^100","code^100","domain","subject","description^10","keywords^100","ageGroup^10","filter^10","theme^10","genre^10","objects^25","contentType^100","language^200","teachingMode^25","skills^10","learningObjective^10","curriculum^100","gradeLevel^100","developer^100","attributions^10","identifier^100","IL_UNIQUE_ID^100","owner^50","board^100","relatedBoards^100","creator^100", "dialcodes^100","text","words","releaseNotes"]'
  fields_date: '["lastUpdatedOn","createdOn","versionDate","lastSubmittedOn","lastPublishedOn"]'
  batch_size: 500
  connection_timeout: 30
  fields_mode_collection: '["identifier","name","objectType","contentType","mimeType","size","childNodes","board","subject","medium","gradeLevel","appIcon","resourceType","origin","originData"]'
  compositesearch_index_name: "compositesearch"
  content_tagging_backward_enable: false
  content_tagging_property: '["subject","medium"]'
  search_payload_log_enable: true
  ekstepPlatformApiUserId: "search-service"
  language:
    map:
      Hindi: hi
      English: en
      Telugu: te
      Kannada: ka
      Tamil: ta
      Assamese: as
      Bengali: bn
      Bodo: bo
      Gujarati: gu
      Konkani: ko
      Malayalam: ml
      Marathi: mr
      Nepali: ne
      Odia: or
      Punjabi: pj
      Sanskrit: san

# Example values.yaml structure
initContainers: {}
  # - name: init-myservice
  #   image: busybox:1.28
  #   command: ['sh', '-c', "until nslookup kubernetes.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done"]

sidecars: {}
  # - name: log-reader # Sidecar container
  #   image: busybox # Use another busybox image
  #   command: ["/bin/sh"] # Override the default command
  #   args: ["-c", "tail -f /var/log/app.log"] # Run a shell script that tails the log file

opa:
  enabled: false
