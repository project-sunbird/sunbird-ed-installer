apiVersion: apps/v1
kind: Deployment
metadata:
  name: nlweb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nlweb
  template:
    metadata:
      labels:
        app: nlweb
    spec:
      initContainers:
        - name: install-qdrant-client
          image: python:3.10-slim   # âœ… reliable base image with /bin/sh
          command: ["/bin/sh", "-c"]
          args: ["pip install --no-cache-dir -t /vendor qdrant-client"]
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: vendor
              mountPath: /vendor
      securityContext:
        runAsUser: {{ .Values.nlweb.runAsUser | default 1000 }}
        runAsGroup: {{ .Values.nlweb.runAsGroup | default 1000 }}
        fsGroup: {{ .Values.nlweb.fsGroup | default 1000 }}

      containers:
        - name: nlweb
          image: "{{ .Values.nlweb.image.repository }}:{{ .Values.nlweb.image.tag }}"
          ports:
            - containerPort: {{ .Values.nlweb.port }}
          readinessProbe:
            httpGet:
              path: {{ .Values.nlweb.probePath | default "/" }}
              port: {{ .Values.nlweb.port }}
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: {{ .Values.nlweb.probePath | default "/" }}
              port: {{ .Values.nlweb.port }}
            initialDelaySeconds: 20
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          env:
            - name: PYTHONPATH
              value: {{ .Values.nlweb.env.PYTHONPATH }}
            - name: PORT
              value: "{{ .Values.nlweb.env.PORT }}"
            - name: NLWEB_CONFIG_DIR
              value: {{ .Values.nlweb.env.NLWEB_CONFIG_DIR }}
            - name: QDRANT_URL
              value: {{ .Values.nlweb.env.QDRANT_URL }}
            - name: PIP_NO_CACHE_DIR
              value: "1"
            - name: PIP_USER
              value: "1"
            - name: HOME
              value: "/tmp"
          {{- if .Values.nlweb.envSecret.enabled }}
          envFrom:
            - secretRef:
                name: nlweb-env
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /app/data
            - name: vendor
              mountPath: /app/vendor
            {{- if .Values.nlweb.static.enabled }}
            - name: static
              mountPath: /static
            {{- end }}
            - name: nlweb-config
              mountPath: /config
            - name: logs
              mountPath: /app/logs
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data-pvc
        {{- if .Values.nlweb.static.enabled }}
        - name: static
          configMap:
            name: nlweb-static
        {{- end }}
        - name: nlweb-config
          configMap:
            name: nlweb-config
        - name: logs
          emptyDir: {}
        - name: vendor
          emptyDir: {}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qdrant
spec:
  replicas: 1
  selector:
    matchLabels:
      app: qdrant
  template:
    metadata:
      labels:
        app: qdrant
    spec:
      containers:
        - name: qdrant
          image: "{{ .Values.qdrant.image }}"
          ports:
            - containerPort: {{ .Values.qdrant.port }}
          volumeMounts:
            - name: qdrant-storage
              mountPath: /qdrant/storage
      volumes:
        - name: qdrant-storage
          persistentVolumeClaim:
            claimName: qdrant-pvc
