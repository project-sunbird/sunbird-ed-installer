{{- $currentScope := .}}
{{- range $jobName, $jobData := .Values.flink_jobs }}
{{- if $jobData.enabled }}
{{- with $currentScope }}
{{ $component := "taskmanager" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" $jobName $component }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  annotations:
    checksum/config: {{ .Files.Glob "configs/*" | toYaml | sha256sum }}
    checksum/job-config: {{ $jobData | toYaml | sha256sum }}
  {{- if .Values.commonAnnotations }}
    {{ include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "common.names.name" . }}
      app.kubernetes.io/component: {{ printf "%s-%s" $jobName $component }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "common.names.name" . }}
        app.kubernetes.io/component: {{ printf "%s-%s" $jobName $component }}
      annotations:
        checksum/config: {{ .Files.Glob "configs/*" | toYaml | sha256sum }}
        checksum/job-config: {{ $jobData | toYaml | sha256sum }}
    spec:
      serviceAccountName: {{ include "common.names.fullname" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: {{ .Values.taskmanager.flink_work_dir }}
          command: ["/opt/flink/bin/taskmanager.sh"]
          args: ["start-foreground",
  {{- if eq .Values.global.checkpoint_store_type "azure" }}
            "-Dfs.azure.account.key.{{ .Values.global.object_storage_endpoint }}={{ .Values.global.cloud_storage_secret_key }}",
  {{- end }}
  {{- if eq .Values.global.checkpoint_store_type "gcs" }}
            "-Dgoogle.cloud.auth.service.account.enable=true",
  {{- end }}
  {{- if eq .Values.global.checkpoint_store_type "s3" }}
            "-Ds3.access-key={{ .Values.s3_access_key }}",
            "-Ds3.secret-key={{ .Values.s3_secret_key }}",
            "-Ds3.endpoint={{ .Values.s3_endpoint }}",
            "-Ds3.path.style.access={{ .Values.s3_path_style_access }}",
  {{- end }}
            "-Dweb.submit.enable=false",
            "-Dmetrics.reporter.prom.class=org.apache.flink.metrics.prometheus.PrometheusReporter",
            "-Dmetrics.reporter.prom.host={{ $jobName }}-taskmanager",
            "-Dmetrics.reporter.prom.port=9251-9260",
            "-Djobmanager.rpc.address={{ $jobName }}-jobmanager",
            "-Dtaskmanager.rpc.port={{ .Values.taskmanager.rpc_port }}"]
          ports:
            {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
          - name: flink-config-volume
            mountPath: /opt/flink/conf/flink-conf.yaml
            subPath: flink-conf.yaml
          - name: flink-config-volume
            mountPath: /opt/flink/conf/log4j-console.properties
            subPath: log4j-console.properties
      volumes:
      - name: flink-config-volume
        configMap:
          name: {{ $jobName }}-config
          items:
          - key: flink-conf
            path: flink-conf.yaml
          - key: log4j_console_properties
            path: log4j-console.properties 
{{ $component := "jobmanager" }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ printf "%s-%s" $jobName $component }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
  annotations:
    checksum/config: {{ .Files.Glob "configs/*" | toYaml | sha256sum }}
    checksum/job-config: {{ $jobData | toYaml | sha256sum }}
  {{- if .Values.commonAnnotations }}
  {{ include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "common.names.name" . }}
      app.kubernetes.io/component: {{ printf "%s-%s" $jobName $component }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "common.names.name" . }}
        app.kubernetes.io/component: {{ printf "%s-%s" $jobName $component }}
      annotations:
        checksum/config: {{ .Files.Glob "configs/*" | toYaml | sha256sum }}
        checksum/job-config: {{ $jobData | toYaml | sha256sum }}
    spec:
      serviceAccountName: {{ include "common.names.fullname" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $jobName }}-jobmanager
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: /opt/flink
          command: ["/opt/flink/bin/standalone-job.sh"]
          args: ["start-foreground",
  {{- if eq $jobName "error-denormalization"  }}        
                "--job-classname={{ .Values.error_denormalization_job_classname }}",
  {{- else if eq $jobName "assessment-aggregator" }}
                "--job-classname={{ .Values.assessment_aggregator_job_classname }}",
  {{- else if eq $jobName "user-cache-updater-v2" }}
                "--job-classname={{ .Values.user_cache_updater_v2_job_classname }}",
  {{- else if eq $jobName "content-cache-updater" }}
                "--job-classname={{ .Values.content_cache_updater_job_classname }}",
  {{- else if eq $jobName "device-profile-updater" }}
                "--job-classname={{ .Values.device_profile_updater_job_classname }}",
  {{- else if eq $jobName "druid-validator" }}
                "--job-classname={{ .Values.druid_validator_job_classname }}",
  {{- else if eq $jobName "summary-denormalization" }}
                "--job-classname={{ .Values.summary_denormalization_job_classname }}",
  {{- else if eq $jobName "de-normalization-primary" }}
                "--job-classname={{ .Values.de_normalization_primary_job_classname }}",
  {{- else if eq $jobName "de-normalization-secondary" }}
                "--job-classname={{ .Values.de_normalization_secondary_job_classname }}",
  {{- else if eq $jobName "pipeline-preprocessor" }}
                "--job-classname={{ .Values.pipeline_preprocessor_job_classname }}",
  {{- else if eq $jobName "telemetry-extractor" }}
                "--job-classname={{ .Values.telemetry_extractor_job_classname }}",
  {{- else if eq $jobName "ingest-router" }}
                "--job-classname={{ .Values.ingest_router_job_classname }}",
  {{- end }}
  {{- if eq .Values.global.checkpoint_store_type "azure" }}
            "-Dfs.azure.account.key.{{ .Values.global.object_storage_endpoint }}={{ .Values.global.cloud_storage_secret_key }}",
  {{- end }}
  {{- if eq .Values.global.checkpoint_store_type "gcs" }}
            "-Dgoogle.cloud.auth.service.account.enable=true",
  {{- end }}
  {{- if eq .Values.global.checkpoint_store_type "s3" }}
            "-Ds3.access-key={{ .Values.s3_access_key }}",
            "-Ds3.secret-key={{ .Values.s3_secret_key }}",
            "-Ds3.endpoint={{ .Values.s3_endpoint }}",
            "-Ds3.path.style.access={{ .Values.s3_path_style_access }}",
  {{- end }}
                "-Dweb.submit.enable=false",
                "-Dmetrics.reporter.prom.class=org.apache.flink.metrics.prometheus.PrometheusReporter",
                "-Dmetrics.reporter.prom.port={{ .Values.jobmanager.prom_port }}",
                "-Djobmanager.rpc.address={{ $jobName }}-jobmanager",
                "-Djobmanager.rpc.port={{ .Values.jobmanager.rpc_port }}",
                "-Dparallelism.default=1", 
                "-Dblob.server.port={{ .Values.jobmanager.blob_port }}", 
                "-Dqueryable-state.server.ports={{ .Values.jobmanager.query_port }}",
                "--config.file.path",
                "/data/flink/conf/{{ $jobName }}.conf"]
          ports:
            {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
          - name: flink-config-volume
            mountPath: /opt/flink/conf/flink-conf.yaml
            subPath: flink-conf.yaml
          - name: flink-config-volume
            mountPath: /data/flink/conf/base-config.conf
            subPath: base-config.conf
          - name: flink-config-volume
            mountPath: /data/flink/conf/{{ $jobName }}.conf
            subPath: {{ $jobName }}.conf
          - name: flink-config-volume
            mountPath: /opt/flink/conf/log4j-console.properties
            subPath: log4j-console.properties
      volumes:
      - name: flink-config-volume
        configMap:
          name: {{ $jobName }}-config
          items:
          - key: flink-conf
            path: flink-conf.yaml
          - key: base-config
            path: base-config.conf
          - key: config
            path: {{ $jobName }}.conf
          - key: log4j_console_properties
            path: log4j-console.properties
{{- end }}
{{- end}}
{{- end}}
