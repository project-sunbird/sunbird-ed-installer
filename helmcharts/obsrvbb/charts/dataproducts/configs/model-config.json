{
    "wfs": {
      "search": {
        "type": "{{ .Values.global.sunbird_cloud_storage_provider | default "" }}",
        "queries": [
          {
            "bucket": "{{ .Values.global.public_container_name }}/telemetry-data-store",
            "prefix": "unique/raw/",
            "endDate": "$(date --date yesterday '+%Y-%m-%d')",
            "delta": 0
          }
        ]
        
      },
      "filters": [
        {
          "name": "actor",
          "operator": "ISNOTNULL"
        }  
      ],
      "model": "org.ekstep.analytics.model.WorkflowSummary",
      "modelParams": {
        "apiVersion": "v2",
        "parallelization": 32
      },
      "output": [
        {
          "to": "{{ .Values.global.sunbird_cloud_storage_provider | default  "azure" }}",
          "params": {
            "bucket": "{{ .Values.global.public_container_name }}/telemetry-data-store",
            "key": "{{ .Values.job_manager_tmp_dir }}/wfs/$(date --date yesterday '+%Y-%m-%d')"
          }
        },
        {
          "to": "kafka",
          "params": {
            "brokerList": "{{ .Values.global.kafka.host }}:{{ .Values.global.kafka.port }}",
            "topic": "{{ .Values.topic }}"
          }
        }
      ],
      "parallelization": 32,
      "appName": "Workflow Summarizer",
      "deviceMapping": true
    },
    "video-streaming": {
      "search": {
        "type": "{{ .Values.global.sunbird_cloud_storage_provider | default  "azure" }}"
      },
      "model": "org.ekstep.analytics.job.VideoStreamingJob",
      "modelParams": {
        "maxIterations": 10
      },
      "output": [
        {
          "to": "console",
          "params": {
            "printEvent": false
          }
        }
      ],
      "parallelization": 8,
      "appName": "Video Streaming Job",
      "deviceMapping": false
    },
    "admin-user-reports": {
      "search": {
        "type": "none"
      },
      "model": "org.ekstep.analytics.job.report.StateAdminReportJob",
      "modelParams": {
        "sparkCassandraConnectionHost": "{{ .Values.core_cassandra_host | default .Values.global.cassandra.host }}",
        "sparkElasticsearchConnectionHost": "{{ .Values.sunbird_es_host | default .Values.global.elasticsearch.host }}"
      },
      "output": [
        {
          "to": "console",
          "params": {
            "printEvent": false
          }
        }
      ],
      "parallelization": 8,
      "appName": "Admin User Reports",
      "deviceMapping": false
    },
    "admin-geo-reports": {
      "search": {
        "type": "none"
      },
      "model": "org.ekstep.analytics.job.report.StateAdminGeoReportJob",
      "modelParams": {
        "sparkCassandraConnectionHost": "{{ .Values.core_cassandra_host | default .Values.global.cassandra.host }}",
        "sparkElasticsearchConnectionHost": "{{ .Values.sunbird_es_host | default .Values.global.elasticsearch.host }}"
      },
      "output": [
        {
          "to": "console",
          "params": {
            "printEvent": false
          }
        }
      ],
      "parallelization": 8,
      "appName": "Admin Geo Reports",
      "deviceMapping": false
    },
    "content-rating-updater": {
      "search": {
        "type": "none"
      },
      "model": "org.ekstep.analytics.updater.UpdateContentRating",
      "modelParams": {
        "startDate": "$(date --date yesterday '+%Y-%m-%d')",
        "endDate": "$(date '+%Y-%m-%d')"
      },
      "output": [
        {
          "to": "console",
          "params": {
            "printEvent": false
          }
        }
      ],
      "parallelization": 8,
      "appName": "Content Rating Updater",
      "deviceMapping": false
    },
    "monitor-job-summ": {
      "search": {
        "type": "local",
        "queries": [
          {
            "file": "{{ .Values.jobmanager_logs_directory }}/logs/joblog.log"
          }
        ]
      },
      "model": "org.ekstep.analytics.model.MonitorSummaryModel",
      "modelParams": {
        "pushMetrics": true,
        "brokerList": "{{ .Values.global.kafka.host }}:{{ .Values.global.kafka.port }}",
        "topic": "{{ .Values.analytics_metrics_topic }}"
        ,
        "model": [
          {
            "model": "WorkFlowSummaryModel",
            "category": "consumption",
            "input_dependency": "None"
          },
          {
            "model": "UpdateContentRating",
            "category": "consumption",
            "input_dependency": "None"
          },
          {
            "model": "DruidQueryProcessingModel",
            "category": "consumption",
            "input_dependency": "None"
          },
          {
            "model": "MetricsAuditJob",
            "category": "consumption",
            "input_dependency": "None"
          },
          {
            "model": "StateAdminReportJob",
            "category": "consumption",
            "input_dependency": "None"
          },
          {
            "model": "StateAdminGeoReportJob",
            "category": "consumption",
            "input_dependency": "None"
          },
          {
            "model": "CourseEnrollmentJob",
            "category": "consumption",
            "input_dependency": "None"
          }
        ]
      },
      "output": [
        {
          "to": "console",
          "params": {
            "printEvent": false
          }
        },
        {
          "to": "kafka",
          "params": {
            "brokerList": "{{ .Values.global.kafka.host }}:{{ .Values.global.kafka.port }}",
            "topic": "{{ .Values.topic }}"

          }
        }
      ],
      "appName": "TestMonitorSummarizer",
      "deviceMapping": true
    },
    "experiment": {
      "search": {
        "type": "none"
      },
      "model": "org.ekstep.analytics.model.ExperimentDefinitionModel",
      "modelParams": {
        "sparkElasticsearchConnectionHost": "{{ .Values.lp_composite_search_host | default .Values.global.elasticsearch.host }}"
      },
      "output": [
        {
          "to": "elasticsearch",
          "params": {
            "index": "experiment"
          }
        }
      ],
      "parallelization": 8,
      "appName": "Experiment-Definition",
      "deviceMapping": false
    },
    "etb-metrics": {
        "search": {
            "type": "none"
        },
        "model": "org.ekstep.analytics.model.report.ETBMetricsJob",
        "modelParams": {
            "reportConfig": {
                "id": "etb_metrics",
                "metrics": [],
                "labels": {
                    "date": "Date",
                    "identifier": "TextBook ID",
                    "name": "TextBook Name",
                    "medium": "Medium",
                    "gradeLevel": "Grade",
                    "subject": "Subject",
                    "createdOn": "Created On",
                    "lastUpdatedOn": "Last Updated On",
                    "totalQRCodes": "Total number of QR codes",
                    "contentLinkedQR": "Number of QR codes with atleast 1 linked content",
                    "withoutContentQR": "Number of QR codes with no linked content",
                    "withoutContentT1": "Term 1 QR Codes with no linked content",
                    "withoutContentT2": "Term 2 QR Codes with no linked content",
                    "status": "Status",
                    "totalContentLinked": "Total content linked",
                    "totalQRLinked": "Total QR codes linked to content",
                    "totalQRNotLinked": "Total number of QR codes with no linked content",
                    "leafNodesCount": "Total number of leaf nodes",
                    "leafNodeUnlinked": "Number of leaf nodes with no content",
                    "l1Name": "Level 1 Name",
                    "l2Name": "Level 2 Name",
                    "l3Name": "Level 3 Name",
                    "l4Name": "Level 4 Name",
                    "l5Name": "Level 5 Name",
                    "dialcode": "QR Code",
                    "sum(scans)": "Total Scans",
                    "noOfContent": "Number of contents",
                    "nodeType": "Type of Node",
                    "term": "Term"
                },
                "output": [{
                    "type": "csv",
                    "dims": ["identifier", "channel", "name"],
                    "fileParameters": ["id", "dims"]
                }],
                "mergeConfig": {
                    "frequency": "WEEK",
                    "basePath": "{{ .Values.spark_output_temp_dir }}",
                    "rollup": 0,
                    "reportPath": "dialcode_counts.csv",
            "postContainer": "{{ .Values.global.public_container_name }}/reports"
                }
            },
            "dialcodeReportConfig": {
                    "id": "etb_metrics",
                    "metrics": [],
                    "labels": {},
                    "output": [{
                        "type": "csv",
                        "dims": ["identifier", "channel", "name"],
                        "fileParameters": ["id", "dims"]
                    }],
                    "mergeConfig": {
                        "frequency": "WEEK",
                        "basePath": "{{ .Values.spark_output_temp_dir }}",
                        "rollup": 1,
                        "reportPath": "dialcode_counts.csv",
                        "rollupAge": "ACADEMIC_YEAR",
                        "rollupCol": "Date",
                        "rollupRange": 10,
              "postContainer":"{{ .Values.global.public_container_name }}"
                    }
            },
            "etbFileConfig": {
                "bucket": "{{ .Values.global.public_container_name }}/reports",
                "file": "dialcode_scans/dialcode_counts.csv"
            },
            "druidConfig": {"queryType": "groupBy","dataSource": "content-model-snapshot","intervals": "1901-01-01T00:00:00+00:00/2101-01-01T00:00:00+00:00","aggregations": [{"name": "count","type": "count"}],"dimensions": [{"fieldName": "channel","aliasName": "channel"},{"fieldName": "identifier","aliasName": "identifier","type": "Extraction","outputType": "STRING","extractionFn": [{"type": "javascript","fn": "function(str){return str == null ? null: str.split(\".\")[0]}"}]},{"fieldName": "name","aliasName": "name"},{"fieldName": "createdFor","aliasName": "createdFor"},{"fieldName": "createdOn","aliasName": "createdOn"},{"fieldName": "lastUpdatedOn","aliasName": "lastUpdatedOn"},{"fieldName": "board","aliasName": "board"},{"fieldName": "medium","aliasName": "medium"},{"fieldName": "gradeLevel","aliasName": "gradeLevel"},{"fieldName": "subject","aliasName": "subject"},{"fieldName": "status","aliasName": "status"}],"filters": [{"type": "equals","dimension": "contentType","value": "TextBook"},{"type": "in","dimension": "status","values": ["Live","Draft","Review"]}],"postAggregation": [],"descending": "false","limitSpec": {"type": "default","limit": 1000000,"columns": [{"dimension": "count","direction": "descending"}]}},
            "tenantConfig": {
                "tenantId": "",
                "slugName": ""
            },
            "store": "{{ .Values.global.sunbird_cloud_storage_provider | default  "azure" }}",
            "format": "csv",
            "key": "druid-reports/",
            "filePath": "druid-reports/",
            "container": "{{ .Values.global.public_container_name }}/telemetry-data-store",
            "folderPrefix": ["slug", "reportName"]
        },
        "output": [{
            "to": "console",
            "params": {
                "printEvent": false
            }
        }],
        "parallelization": 8,
        "appName": "ETB Metrics Model",
        "deviceMapping": false
    },
    "course-enrollment-report":{
      "search": {
          "type": "none"
        },
        "model": "org.ekstep.analytics.model.report.CourseEnrollmentJob",
        "modelParams": {
          "reportConfig": {
            "id": "tpd_metrics",
            "metrics" : [],
            "labels": {
              "completionCount": "Completion Count",
              "status": "Status",
              "enrollmentCount": "Enrollment Count",
              "courseName": "Course Name",
              "batchName": "Batch Name"
            },
            "output": [{
              "type": "csv",
              "dims": []
            }]
          },
          "esConfig": {
          "request": {
                  "filters":{
                      "objectType": ["Content"],
                      "contentType": ["Course"],
                      "identifier": [],
                      "status": ["Live"]
                  },
                  "limit": 10000
              }
          },
          "store": "{{ .Values.global.sunbird_cloud_storage_provider | default  "azure" }}",
          "format":"csv",
          "key": "druid-reports/",
          "filePath": "druid-reports/",
          "container": "{{ .Values.global.public_container_name }}/telemetry-data-store",
          "folderPrefix": ["slug", "reportName"],
          "sparkCassandraConnectionHost": "{{ .Values.core_cassandra_host | default .Values.global.cassandra.host }}",
          "sparkElasticsearchConnectionHost": "{{ .Values.sunbird_es_host | default .Values.global.elasticsearch.host }}"
  
      },
      "output": [{
        "to": "console",
        "params": {
          "printEvent": false
        }
      }],
      "parallelization": 8,
      "appName": "TPD Course Enrollment Metrics Model",
      "deviceMapping": false
    },
    "course-consumption-report":{
      "search": {
        "type": "none"
      },
      "model": "org.ekstep.analytics.model.report.CourseConsumptionJob",
      "modelParams": {
        "esConfig": {
          "request": {
            "filters": {
              "objectType": ["Content"],
              "contentType": ["Course"],
              "identifier": [],
              "status": ["Live"]
            }
          }
        },
        "reportConfig": {
          "id": "tpd_metrics",
          "labels": {
            "date": "Date",
            "status": "Batch Status",
            "timespent": "Timespent in mins",
            "courseName": "Course Name",
            "batchName": "Batch Name"
          },
          "dateRange": {
            "staticInterval": "LastDay",
            "granularity": "all"
          },
          "metrics": [{
            "metric": "totalCoursePlays",
            "label": "Total Course Plays (in mins) ",
            "druidQuery": {
              "queryType": "groupBy",
              "dataSource": "summary-events",
              "intervals": "LastDay",
              "aggregations": [{
                "name": "sum__edata_time_spent",
                "type": "doubleSum",
                "fieldName": "edata_time_spent"
              }],
              "dimensions": [{
                "fieldName": "object_rollup_l1",
                "aliasName": "courseId"
              }, {
                "fieldName": "uid",
                "aliasName": "userId"
              }, {
                "fieldName": "context_cdata_id",
                "aliasName": "batchId"
              }],
              "filters": [{
                "type": "equals",
                "dimension": "eid",
                "value": "ME_WORKFLOW_SUMMARY"
              }, {
                "type": "in",
                "dimension": "dimensions_pdata_id",
                "values": ["{{ .Values.producer_env }}.app", "{{ .Values.producer_env }}.portal"]
              }, {
                "type": "equals",
                "dimension": "dimensions_type",
                "value": "content"
              }, {
                "type": "equals",
                "dimension": "dimensions_mode",
                "value": "play"
              }, {
                "type": "equals",
                "dimension": "context_cdata_type",
                "value": "batch"
              }],
              "postAggregation": [{
                "type": "arithmetic",
                "name": "timespent",
                "fields": {
                  "leftField": "sum__edata_time_spent",
                  "rightField": 60,
                  "rightFieldType": "constant"
                },
                "fn": "/"
              }],
              "descending": "false"
            }
          }],
          "output": [{
            "type": "csv",
            "metrics": ["timespent"],
            "dims": []
          }],
          "queryType": "groupBy"
        },
        "store": "{{ .Values.global.sunbird_cloud_storage_provider | default  "azure" }}",
        "format":"csv",
        "key": "druid-reports/",
        "filePath": "druid-reports/",
        "container": "{{ .Values.global.public_container_name }}/telemetry-data-store",
        "folderPrefix": ["slug", "reportName"],
        "sparkCassandraConnectionHost": "{{ .Values.core_cassandra_host | default .Values.global.cassandra.host }}",
        "sparkElasticsearchConnectionHost": "{{ .Values.sunbird_es_host | default .Values.global.elasticsearch.host }}"

      },
      "output": [{
        "to": "console",
        "params": {
          "printEvent": false
        }
      }],
      "parallelization": 8,
      "appName": "TPD Course Consumption Metrics Model",
      "deviceMapping": false
    },
    "audit-metrics-report": {
        "search": {
          "type": "none"
        },
        "model": "org.ekstep.analytics.model.MetricsAuditJob",
        "modelParams": {
          "auditConfig": [
            {
              "name": "denorm",
              "search": {
                "type": "{{ .Values.global.sunbird_cloud_storage_provider | default  "azure" }}",
                "queries": [
                  {
                    "bucket": "{{ .Values.global.public_container_name }}/telemetry-data-store",
                    "prefix": "telemetry-denormalized/raw/",
                    "startDate": "$(date --date yesterday '+%Y-%m-%d')",
                    "endDate": "$(date --date yesterday '+%Y-%m-%d')"
                  }
                ]
              },
              "filters": [
                {
                  "name": "flags.user_data_retrieved",
                  "operator": "EQ",
                  "value": true
                },
                {
                  "name": "flags.content_data_retrieved",
                  "operator": "EQ",
                  "value": true
                },
                {
                  "name": "flags.device_data_retrieved",
                  "operator": "EQ",
                  "value": true
                },
                {
                  "name": "flags.dialcode_data_retrieved",
                  "operator": "EQ",
                  "value": true
                },
                {
                  "name": "flags.collection_data_retrieved",
                  "operator": "EQ",
                  "value": true
                },
                {
                  "name": "flags.derived_location_retrieved",
                  "operator": "EQ",
                  "value": true
                }
              ]
            },
            {
              "name": "failed",
              "search": {
                "type": "{{ .Values.global.sunbird_cloud_storage_provider | default  "azure" }}",
                "queries": [
                  {
                    "bucket": "{{ .Values.global.public_container_name }}/telemetry-data-store",
                    "prefix": "failed/",
                    "startDate": "$(date --date yesterday '+%Y-%m-%d')",
                    "endDate": "$(date --date yesterday '+%Y-%m-%d')"
                  }
                ]
              }
            },
            {
              "name": "unique",
              "search": {
                "type": "{{ .Values.global.sunbird_cloud_storage_provider | default  "azure" }}",
                "queries": [
                  {
                    "bucket": "{{ .Values.global.public_container_name }}/telemetry-data-store",
                    "prefix": "unique/",
                    "startDate": "$(date --date yesterday '+%Y-%m-%d')",
                    "endDate": "$(date --date yesterday '+%Y-%m-%d')"
                  }
                ]
              }
            },
            {
              "name": "raw",
              "search": {
                "type": "{{ .Values.global.sunbird_cloud_storage_provider | default  "azure" }}",
                "queries": [
                  {
                    "bucket": "{{ .Values.global.public_container_name }}/telemetry-data-store",
                    "prefix": "raw/",
                    "startDate": "$(date --date yesterday '+%Y-%m-%d')",
                    "endDate": "$(date --date yesterday '+%Y-%m-%d')"
                  }
                ]
              }
            },
            {
              "name": "channel-raw",
              "search": {
                "type": "{{ .Values.global.sunbird_cloud_storage_provider | default  "azure" }}",
                "queries": [
                  {
                    "folder": true,
                    "bucket": "{{ .Values.global.public_container_name }}/telemetry-data-store",
                    "prefix": "channel/*/raw/",
                    "startDate": "$(date --date yesterday '+%Y-%m-%d')",
                    "endDate": "$(date --date yesterday '+%Y-%m-%d')*.json.gz"
                  }
                ]
              }
            },
            {
              "name": "channel-summary",
              "search": {
                "type": "{{ .Values.global.sunbird_cloud_storage_provider | default  "azure" }}",
                "queries": [
                  {
                    "folder": true,
                    "bucket": "{{ .Values.global.public_container_name }}/telemetry-data-store",
                    "prefix": "channel/*/summary/",
                    "startDate": "$(date --date yesterday '+%Y-%m-%d')",
                    "endDate": "$(date --date yesterday '+%Y-%m-%d')*.json.gz"
                  }
                ]
              }
            },
            {
              "name": "derived",
              "search": {
                "type": "{{ .Values.global.sunbird_cloud_storage_provider | default  "azure" }}",
                "queries": [
                  {
                    "bucket": "{{ .Values.global.public_container_name }}/telemetry-data-store",
                    "prefix": "derived/wfs/",
                    "startDate": "$(date --date yesterday '+%Y-%m-%d')",
                    "endDate": "$(date --date yesterday '+%Y-%m-%d')"
                  }
                ]
              }
            },
            {
              "name": "telemetry-count",
              "search": {
                "type": "druid",
                "druidQuery": {
                  "queryType": "timeSeries",
                  "dataSource": "telemetry-events",
                  "intervals": "LastDay",
                  "aggregations": [
                    {
                      "name": "total_count",
                      "type": "count",
                      "fieldName": "count"
                    }
                  ],
                  "descending": "false"
                }
              }
            },
            {
              "name": "summary-count",
              "search": {
                "type": "druid",
                "druidQuery": {
                  "queryType": "timeSeries",
                  "dataSource": "summary-events",
                  "intervals": "LastDay",
                  "aggregations": [
                    {
                      "name": "total_count",
                      "type": "count",
                      "fieldName": "count"
                    }
                  ],
                  "descending": "false"
                }
              }
            }
          ]
        },
        "output": [
          {
            "to": "kafka",
            "params": {
              "brokerList": "{{ .Values.global.kafka.host }}:{{ .Values.global.kafka.port }}",
              "topic": "{{ .Values.metrics_topic }}"

            }
          }
        ],
        "parallelization": 8,
        "appName": "Metrics Audit"
    }
  }