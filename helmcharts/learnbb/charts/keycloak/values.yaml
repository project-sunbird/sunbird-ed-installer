ameOverride: "keycloak"
fullnameOverride: "keycloak"

replicaCount: 1

image:
  repository: sunbirded.azurecr.io/keycloak
  tag: "21.1.2"
  pullPolicy: IfNotPresent
  pullSecrets: []

podAnnotations: {}

podSecurityContext: {}
  # runAsNonRoot: true
  # runAsUser: 1001
  # fsGroup: 1001

securityContext: {}
  # readOnlyRootFilesystem: false
  # capabilities:
  #   drop:
  #   - ALL

service:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: https
      port: 8443
      targetPort: 8443
    - name: admin
      port: 9990
      targetPort: 9990

ingress: {}
  # enabled: false
  # annotations: {}
  # hosts:
  #   - host: chart-example.local
  #     paths:
  #     - /

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

# livenessProbe: {}
# Example:
livenessProbe:
  httpGet:
    path: "/auth"
    port: 8080
  initialDelaySeconds: 15
  periodSeconds: 15
  failureThreshold: 5

# readinessProbe: {}
# Example:
readinessProbe:
  httpGet:
    path: "/auth"
    port: 8080
  initialDelaySeconds: 15
  periodSeconds: 15
  failureThreshold: 5

nodeSelector: {}
tolerations: []
affinity: {}

configmap:
  enabled: true
  mountPath: /opt/keycloak/imports

serviceAccount:
  create: true
  name: ""

serviceMonitor: {}
  # enabled: false
  # interval: 30s
  # scrapeTimeout: 10s
  # labels: {} # additional labels e.g. release: prometheus
  # honorLabels: true
  # jobLabel: "app.kubernetes.io/name"

# Example values.yaml structure
initContainers: {}
  # - name: init-myservice
  #   image: busybox:1.28
  #   command: ['sh', '-c', "until nslookup kubernetes.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done"]

sidecars: {}
  # - name: log-reader # Sidecar container
  #   image: busybox # Use another busybox image
  #   command: ["/bin/sh"] # Override the default command
  #   args: ["-c", "tail -f /var/log/app.log"] # Run a shell script that tails the log file

# global:
#   postgresql:
#     postgresqlUsername: postgres
#     postgresqlPassword: postgres

keycloak_user: admin
keycloak_password: admin
keycloak_database_type: postgres
keycloak_database_name: keycloak
sunbird_user_service_base_url: "http://userorg-service:9000"
nodebb_client_secret: "nodebb"
trampoline_client_secret: "trampoline"
android_client_secret: "android"
google_auth_desktop_client_secret: "google-auth-desktop"
desktop_client_secret: "desktop_client_secret"
google_android_client_secret: "google-auth-android"
lms_client_secret: "lms"
google_auth_client_secret: "google-auth"
trampoline_desktop_client_secret: "trampoline-desktop"
trampoline_android_client_secret: "trampoline-android"
direct_grant_client_secret: "direct-grant"
cassandra_federation_provider_id: "cassandrafederationid"
tenant_name: sunbird
mail_server_host: "smtp.example.com"
mail_server_username: "admin"
mail_server_password: "password"
mail_server_from_email: "admin@example.com"

commonAnnotations:
  reloader.stakater.com/auto: "true"
  "helm.sh/hook-weight": "-3"