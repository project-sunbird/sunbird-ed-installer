# You can add key value pair here, to create env values.
connectionInfo_uri: "jdbc:postgresql://{{ .Values.global.postgresql.host }}:5432/{{ .Values.registry_database }}"
connectionInfo_username: "{{ .Values.global.postgresql.postgresqlUsername }}"
elastic_search_enabled: "{{ .Values.global.elasticsearch.enabled }}"
elastic_search_connection_url: "{{ .Values.global.elasticsearch.host }}:{{ .Values.global.elasticsearch.port }}"
search_provider: "{{ .Values.search_provider }}"
search_providerName: "{{ .Values.search_providerName }}"
enable_external_templates: "{{ .Values.enable_external_templates }}"
sign_url: "{{ .Values.sign_url }}"
signature_enabled: "{{ .Values.signature_enabled }}"
pdf_url: "{{ .Values.pdf_url }}"
template_base_url: "{{ .Values.template_base_url }}"
workflow.enable: "{{ .Values.workflow_enable }}"
connectionInfo_maxPoolSize: "{{ .Values.connectionInfo_maxPoolSize }}"
auditTaskExecutor_queueCapacity: "{{ .Values.auditTaskExecutor_queueCapacity }}"
taskExecutor_index_queueCapacity: "{{ .Values.taskExecutor_index_queueCapacity }}"
authentication_enabled: "{{ .Values.authentication_enabled }}"
async_enabled: "{{ .Values.async_enabled }}"
webhook_enabled: "{{ .Values.webhook_enabled }}"
ZOOKEEPER_CLIENT_PORT: "{{ .Values.global.zookeeper.port }}"
ZOOKEEPER_TICK_TIME: "{{ .Values.registry_zookeeper_tick_time }}"
KAFKA_BROKER_ID: "{{ .Values.registry_kafka_broker_id }}"
KAFKA_ZOOKEEPER_CONNECT: "{{ .Values.global.zookeeper.host }}:{{ .Values.global.zookeeper.port }}"
KAFKA_ADVERTISED_LISTENERS: "{{ .Values.global.kafka.host }}:{{ .Values.global.kafka.port }}"
kafka_bootstrap_address: "{{ .Values.global.kafka.host }}:{{ .Values.global.kafka.port }}"
KAFKA_LISTENER_SECURITY_PROTOCOL_MAP:  "{{ .Values.registry_listener_security_protocol_map }}"
KAFKA_INTER_BROKER_LISTENER_NAME:  "{{ .Values.registry_inter_broker_listener_name }}"
KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR:  "{{ .Values.kafka_offsets_topic_replication_factor }}"
logging.level.root : "{{ .Values.logging_level_root }}"