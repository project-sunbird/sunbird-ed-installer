nameOverride: "assessment"
fullnameOverride: "assessment"

replicaCount: 1

image:
  repository: sunbirded.azurecr.io/assessment-service
  tag: release-5.4.0_RC1_7889b07_37
  pullPolicy: IfNotPresent
  pullSecrets: []

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001
  fsGroup: 1001

securityContext: {}

service:
  type: ClusterIP
  ports:
    - name: http-assessment
      port: 9000
      targetPort: 9000

ingress: {}

resources:
  requests:
    cpu: 100m
    memory: 100M
  limits:
    cpu: 1
    memory: 1G

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

livenessProbe:
  failureThreshold: 5
  httpGet:
      path: /health
      port: 9000
  initialDelaySeconds: 15
  periodSeconds: 15
  timeoutSeconds: 5

readinessProbe:
  failureThreshold: 5
  httpGet:
      path: /health
      port: 9000
  initialDelaySeconds: 15
  periodSeconds: 15
  timeoutSeconds: 5

nodeSelector: {}
tolerations: []
affinity: {}

configmap:
  enabled: true
  mountPath: /home/sunbird/assessment-service-1.0-SNAPSHOT/config

serviceAccount:
  create: true
  name: ""

serviceMonitor:
  enabled: false
  interval: 30s
  scrapeTimeout: 10s
  labels: {} # additional labels e.g. release: prometheus
  honorLabels: true
  jobLabel: "app.kubernetes.io/name"

initContainers: {}
sidecars: {}

javaenv:
  javaoptions: -Xms500m -Xmx500m
  _javaoptions: -Dlog4j2.formatMsgNoLookups=true

inquiry:
  assessment:
    publish_kafka_topic: "{{ .Values.global.env }}.assessment.publish.request"
    import_kafka_topic: "{{ .Values.global.env }}.object.import.request"
    copy_origin_data: '["name", "author", "license", "organisation"]'
    copy_props_to_remove: '["downloadUrl", "artifactUrl", "variants",
      "createdOn", "collections", "children", "lastUpdatedOn", "SYS_INTERNAL_LAST_UPDATED_ON",
      "versionKey", "s3Key", "status", "pkgVersion", "toc_url", "mimeTypesCount",
      "contentTypesCount", "leafNodesCount", "childNodes", "prevState", "lastPublishedOn",
      "flagReasons", "compatibilityLevel", "size", "publishChecklist", "publishComment",
      "LastPublishedBy", "rejectReasons", "rejectComment", "gradeLevel", "subject",
      "medium", "board", "topic", "purpose", "subtopic", "contentCredits",
      "owner", "collaborators", "creators", "contributors", "badgeAssertions", "dialcodes",
      "concepts", "keywords", "reservedDialcodes", "dialcodeRequired", "leafNodes", "sYS_INTERNAL_LAST_UPDATED_ON", "prevStatus", "lastPublishedBy", "streamingUrl"]'
  required_props: '["name", "code", "mimeType", "framework", "channel"]'
  cloudstorage_metadata_list: '["appIcon", "artifactUrl", "posterImage", "previewUrl", "thumbnail", "assetsMap", "certTemplate", "itemSetPreviewUrl", "grayScaleAppIcon", "sourceURL", "variants", "downloadUrl", "streamingUrl", "toc_url", "data", "question", "solutions", "editorState", "media", "pdfUrl", "transcripts"]'
  cloudstorage_relative_path_prefix: CONTENT_STORAGE_BASE_PATH
  cloudstorage_base_path: "https://{{ .Values.global.azure_storage_account_name }}.blob.core.windows.net"
  valid_cloudstorage_base_urls: '["https://{{ .Values.global.azure_storage_account_name }}.blob.core.windows.net","https://obj.dev.sunbird.org"]'
  search_service_base_url: http://search-service:9000/v3/search

commonAnnotations:
  reloader.stakater.com/auto: "true"

opa:
  enabled: false