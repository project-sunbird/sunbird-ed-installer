nameOverride: "report"
fullnameOverride: "report"

replicaCount: 1

image:
  repository: sunbirded.azurecr.io/report-service
  tag: "release-5.0.1"
  pullPolicy: IfNotPresent
  pullSecrets: []

podAnnotations: {}

podSecurityContext: {}
  # runAsNonRoot: true
  # runAsUser: 1001
  # fsGroup: 1001

securityContext: {}
  # readOnlyRootFilesystem: false
  # capabilities:
  #   drop:
  #   - ALL

service:
  type: ClusterIP
  ports:
    - name: http-report
      port: 3030
      targetPort: 3030

ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
      - /

resources:
  requests:
    cpu: 100m
    memory: 100Mi
  limits:
    cpu: 1
    memory: 1G

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80

# livenessProbe:
#     httpGet:
#       path: /service/health
#       port: 3030
#     initialDelaySeconds: 15
#     periodSeconds: 15
#     timeoutSeconds: 5
#     failureThreshold: 2

# readinessProbe:
#     httpGet:
#       path: /service/health
#       port: 3030
#     initialDelaySeconds: 15
#     periodSeconds: 15
#     timeoutSeconds: 5
#     failureThreshold: 2

nodeSelector: {}
tolerations: []
affinity: {}

configmap:
  enabled: false
  mountPath: /config

serviceAccount:
  create: true
  name: ""

serviceMonitor:
  enabled: true
  interval: 30s
  scrapeTimeout: 10s
  labels:
    release: monitoring
  honorLabels: true
  jobLabel: "app.kubernetes.io/name"

# Example values.yaml structure
initContainers: {}
  # - name: init-myservice
  #   image: busybox:1.28
  #   command: ['sh', '-c', "until nslookup kubernetes.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done"]

sidecars: {}
  # - name: log-reader # Sidecar container
  #   image: busybox # Use another busybox image
  #   command: ["/bin/sh"] # Override the default command
  #   args: ["-c", "tail -f /var/log/app.log"] # Run a shell script that tails the log file

envoy_probes:
  failureThreshold: 2
  httpGet:
    path: /ready
    port: 10000
    scheme: HTTP
  initialDelaySeconds: 5
  periodSeconds: 15
  timeoutSeconds: 5

opa_probes:
  failureThreshold: 3
  httpGet:
    path: /health?plugins
    port: 8282
    scheme: HTTP
  initialDelaySeconds: 5
  periodSeconds: 15
  timeoutSeconds: 5

envoy_resources:
  requests:
    cpu: "100m"
    memory: "100Mi"
  limits:
    cpu: "1"
    memory: "1024Mi"

opa_resources:
  requests:
    cpu: "100m"
    memory: "100Mi"
  limits:
    cpu: "1"
    memory: "1024Mi"

init_container_resources:
  requests:
    cpu: "100m"
    memory: "100Mi"
  limits:
    cpu: "1"
    memory: "1024Mi"

opa_enabled: false

postgresql: &postgresql
  host: postgresql
  postgresqlUser: postgres
  postgresqlPassword: "postgres"
  port: 5432
  db: postgres

global:
  postgresql: *postgresql
  domain: "https://dummy.sunbird.com"

commonAnnotations:
  reloader.stakater.com/auto: "true"

sunbird_portal_auth_server_client: portal